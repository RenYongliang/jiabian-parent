<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jiabian.dao.basic.hotel.HomeMapper" >
    <resultMap id="BaseResultMap" type="com.jiabian.beans.basic.hotel.Home" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="price" property="price" jdbcType="DOUBLE" />
        <result column="time" property="time" jdbcType="TIMESTAMP" />
        <result column="introduce" property="introduce" jdbcType="LONGVARCHAR" />
        <result column="img" property="img" jdbcType="VARCHAR" />
        <result column="classifyId" property="classifyId" jdbcType="BIGINT" />
        <result column="peopleNumber" property="peopleNumber" jdbcType="INTEGER" />
        <result column="area" property="area" jdbcType="VARCHAR" />
        <result column="type" property="type" jdbcType="TINYINT" />
        <result column="breakfast" property="breakfast" jdbcType="TINYINT" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        id, name, price, time, introduce, img, classifyId, peopleNumber, area, type, breakfast
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jiabian.beans.basic.hotel.HomeQueryHelper" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from home
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from home
        where id = #{id,jdbcType=INTEGER}
    </select>

    <insert id="insert" parameterType="com.jiabian.beans.basic.hotel.Home" >
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into home (name, price, time, 
            introduce, img, classifyId, 
            peopleNumber, area, type, 
            breakfast)
        values (#{name,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, #{time,jdbcType=TIMESTAMP}, 
            #{introduce,jdbcType=LONGVARCHAR}, #{img,jdbcType=VARCHAR}, #{classifyId,jdbcType=BIGINT}, 
            #{peopleNumber,jdbcType=INTEGER}, #{area,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, 
            #{breakfast,jdbcType=TINYINT})
    </insert>

    <insert id="insertSelective" parameterType="com.jiabian.beans.basic.hotel.Home" >
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into home
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="name != null" >
                name,
            </if>
            <if test="price != null" >
                price,
            </if>
            <if test="time != null" >
                time,
            </if>
            <if test="introduce != null" >
                introduce,
            </if>
            <if test="img != null" >
                img,
            </if>
            <if test="classifyId != null" >
                classifyId,
            </if>
            <if test="peopleNumber != null" >
                peopleNumber,
            </if>
            <if test="area != null" >
                area,
            </if>
            <if test="type != null" >
                type,
            </if>
            <if test="breakfast != null" >
                breakfast,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="price != null" >
                #{price,jdbcType=DOUBLE},
            </if>
            <if test="time != null" >
                #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="introduce != null" >
                #{introduce,jdbcType=LONGVARCHAR},
            </if>
            <if test="img != null" >
                #{img,jdbcType=VARCHAR},
            </if>
            <if test="classifyId != null" >
                #{classifyId,jdbcType=BIGINT},
            </if>
            <if test="peopleNumber != null" >
                #{peopleNumber,jdbcType=INTEGER},
            </if>
            <if test="area != null" >
                #{area,jdbcType=VARCHAR},
            </if>
            <if test="type != null" >
                #{type,jdbcType=TINYINT},
            </if>
            <if test="breakfast != null" >
                #{breakfast,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.jiabian.beans.basic.hotel.HomeQueryHelper" resultType="java.lang.Integer" >
        select count(*) from home
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update home
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.name != null" >
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.price != null" >
                price = #{record.price,jdbcType=DOUBLE},
            </if>
            <if test="record.time != null" >
                time = #{record.time,jdbcType=TIMESTAMP},
            </if>
            <if test="record.introduce != null" >
                introduce = #{record.introduce,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.img != null" >
                img = #{record.img,jdbcType=VARCHAR},
            </if>
            <if test="record.classifyId != null" >
                classifyId = #{record.classifyId,jdbcType=BIGINT},
            </if>
            <if test="record.peopleNumber != null" >
                peopleNumber = #{record.peopleNumber,jdbcType=INTEGER},
            </if>
            <if test="record.area != null" >
                area = #{record.area,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null" >
                type = #{record.type,jdbcType=TINYINT},
            </if>
            <if test="record.breakfast != null" >
                breakfast = #{record.breakfast,jdbcType=TINYINT},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update home
        set id = #{record.id,jdbcType=INTEGER},
            name = #{record.name,jdbcType=VARCHAR},
            price = #{record.price,jdbcType=DOUBLE},
            time = #{record.time,jdbcType=TIMESTAMP},
            introduce = #{record.introduce,jdbcType=LONGVARCHAR},
            img = #{record.img,jdbcType=VARCHAR},
            classifyId = #{record.classifyId,jdbcType=BIGINT},
            peopleNumber = #{record.peopleNumber,jdbcType=INTEGER},
            area = #{record.area,jdbcType=VARCHAR},
            type = #{record.type,jdbcType=TINYINT},
            breakfast = #{record.breakfast,jdbcType=TINYINT}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.jiabian.beans.basic.hotel.Home" >
        update home
        <set >
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="price != null" >
                price = #{price,jdbcType=DOUBLE},
            </if>
            <if test="time != null" >
                time = #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="introduce != null" >
                introduce = #{introduce,jdbcType=LONGVARCHAR},
            </if>
            <if test="img != null" >
                img = #{img,jdbcType=VARCHAR},
            </if>
            <if test="classifyId != null" >
                classifyId = #{classifyId,jdbcType=BIGINT},
            </if>
            <if test="peopleNumber != null" >
                peopleNumber = #{peopleNumber,jdbcType=INTEGER},
            </if>
            <if test="area != null" >
                area = #{area,jdbcType=VARCHAR},
            </if>
            <if test="type != null" >
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="breakfast != null" >
                breakfast = #{breakfast,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from home
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <delete id="deleteByExample" parameterType="com.jiabian.beans.basic.hotel.HomeQueryHelper" >
        delete from home
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

	<select id="selectHomes" resultType="com.jiabian.hotel.response.HomeRes" 
    	parameterType="com.jiabian.base.PagesModel">
    	select *
    	<include refid="add"></include>
    	<if test="orderBy != null">
    		order by ${orderBy}
    	</if>
    	<if test="doPage">
    		LIMIT #{limitStart,jdbcType=INTEGER},
            #{limitNum,jdbcType=INTEGER}
    	</if>
    </select>
    
    <select id="selectHomeByCondition" resultType="com.jiabian.hotel.response.HomeRes" 
    	parameterType="java.util.Map">
    	select *
    	<include refid="add"></include>
    	where true
    	<if test="name != ''">
    		and name like '%${name}%'
    	</if>
    	<if test="classifyId != 0">
    		and classifyId = #{classifyId}
    	</if>
    	<if test="pagesModel.orderBy != null">
    		order by ${pagesModel.orderBy}
    	</if>
    	<if test="pagesModel.doPage">
    		LIMIT #{pagesModel.limitStart,jdbcType=INTEGER},
            #{pagesModel.limitNum,jdbcType=INTEGER}
    	</if>
    </select>

	<select id="countHomes" parameterType="com.jiabian.base.PagesModel" resultType="int">
		select count(*)
		<include refid="add"></include>
	</select>
	
	<sql id="add">
		from home
	</sql>
	
	<select id="getHomeClassIds" resultType="int">
		select distinct classifyId from home;
	</select>
	
</mapper>