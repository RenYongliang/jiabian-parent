<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jiabian.dao.basic.hotel.OrdersMapper" >
    <resultMap id="BaseResultMap" type="com.jiabian.beans.basic.hotel.Orders" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="userId" property="userId" jdbcType="BIGINT" />
        <result column="homeId" property="homeId" jdbcType="BIGINT" />
        <result column="orderCode" property="orderCode" jdbcType="VARCHAR" />
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
        <result column="paymentTime" property="paymentTime" jdbcType="TIMESTAMP" />
        <result column="type" property="type" jdbcType="TINYINT" />
        <result column="state" property="state" jdbcType="TINYINT" />
        <result column="refund" property="refund" jdbcType="TINYINT" />
        <result column="price" property="price" jdbcType="DECIMAL" />
        <result column="days" property="days" jdbcType="INTEGER" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="telephone" property="telephone" jdbcType="VARCHAR" />
        <result column="number" property="number" jdbcType="INTEGER" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        id, userId, homeId, orderCode, createTime, paymentTime, type, state, refund, price, 
        days, username, telephone, number
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jiabian.beans.basic.hotel.OrdersQueryHelper" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from orders
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select 
        <include refid="Base_Column_List" />
        from orders
        where id = #{id,jdbcType=BIGINT}
    </select>

    <insert id="insert" parameterType="com.jiabian.beans.basic.hotel.Orders" >
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into orders (userId, homeId, orderCode, 
            createTime, paymentTime, type, 
            state, refund, price, 
            days, username, telephone, 
            number)
        values (#{userId,jdbcType=BIGINT}, #{homeId,jdbcType=BIGINT}, #{orderCode,jdbcType=VARCHAR}, 
            #{createTime,jdbcType=TIMESTAMP}, #{paymentTime,jdbcType=TIMESTAMP}, #{type,jdbcType=TINYINT}, 
            #{state,jdbcType=TINYINT}, #{refund,jdbcType=TINYINT}, #{price,jdbcType=DECIMAL}, 
            #{days,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, 
            #{number,jdbcType=INTEGER})
    </insert>

    <insert id="insertSelective" parameterType="com.jiabian.beans.basic.hotel.Orders" >
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into orders
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="userId != null" >
                userId,
            </if>
            <if test="homeId != null" >
                homeId,
            </if>
            <if test="orderCode != null" >
                orderCode,
            </if>
            <if test="createTime != null" >
                createTime,
            </if>
            <if test="paymentTime != null" >
                paymentTime,
            </if>
            <if test="type != null" >
                type,
            </if>
            <if test="state != null" >
                state,
            </if>
            <if test="refund != null" >
                refund,
            </if>
            <if test="price != null" >
                price,
            </if>
            <if test="days != null" >
                days,
            </if>
            <if test="username != null" >
                username,
            </if>
            <if test="telephone != null" >
                telephone,
            </if>
            <if test="number != null" >
                number,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="userId != null" >
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="homeId != null" >
                #{homeId,jdbcType=BIGINT},
            </if>
            <if test="orderCode != null" >
                #{orderCode,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="paymentTime != null" >
                #{paymentTime,jdbcType=TIMESTAMP},
            </if>
            <if test="type != null" >
                #{type,jdbcType=TINYINT},
            </if>
            <if test="state != null" >
                #{state,jdbcType=TINYINT},
            </if>
            <if test="refund != null" >
                #{refund,jdbcType=TINYINT},
            </if>
            <if test="price != null" >
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="days != null" >
                #{days,jdbcType=INTEGER},
            </if>
            <if test="username != null" >
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null" >
                #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="number != null" >
                #{number,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.jiabian.beans.basic.hotel.OrdersQueryHelper" resultType="java.lang.Integer" >
        select count(*) from orders
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update orders
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.userId != null" >
                userId = #{record.userId,jdbcType=BIGINT},
            </if>
            <if test="record.homeId != null" >
                homeId = #{record.homeId,jdbcType=BIGINT},
            </if>
            <if test="record.orderCode != null" >
                orderCode = #{record.orderCode,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null" >
                createTime = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.paymentTime != null" >
                paymentTime = #{record.paymentTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.type != null" >
                type = #{record.type,jdbcType=TINYINT},
            </if>
            <if test="record.state != null" >
                state = #{record.state,jdbcType=TINYINT},
            </if>
            <if test="record.refund != null" >
                refund = #{record.refund,jdbcType=TINYINT},
            </if>
            <if test="record.price != null" >
                price = #{record.price,jdbcType=DECIMAL},
            </if>
            <if test="record.days != null" >
                days = #{record.days,jdbcType=INTEGER},
            </if>
            <if test="record.username != null" >
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.telephone != null" >
                telephone = #{record.telephone,jdbcType=VARCHAR},
            </if>
            <if test="record.number != null" >
                number = #{record.number,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update orders
        set id = #{record.id,jdbcType=BIGINT},
            userId = #{record.userId,jdbcType=BIGINT},
            homeId = #{record.homeId,jdbcType=BIGINT},
            orderCode = #{record.orderCode,jdbcType=VARCHAR},
            createTime = #{record.createTime,jdbcType=TIMESTAMP},
            paymentTime = #{record.paymentTime,jdbcType=TIMESTAMP},
            type = #{record.type,jdbcType=TINYINT},
            state = #{record.state,jdbcType=TINYINT},
            refund = #{record.refund,jdbcType=TINYINT},
            price = #{record.price,jdbcType=DECIMAL},
            days = #{record.days,jdbcType=INTEGER},
            username = #{record.username,jdbcType=VARCHAR},
            telephone = #{record.telephone,jdbcType=VARCHAR},
            number = #{record.number,jdbcType=INTEGER}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.jiabian.beans.basic.hotel.Orders" >
        update orders
        <set >
            <if test="userId != null" >
                userId = #{userId,jdbcType=BIGINT},
            </if>
            <if test="homeId != null" >
                homeId = #{homeId,jdbcType=BIGINT},
            </if>
            <if test="orderCode != null" >
                orderCode = #{orderCode,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                createTime = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="paymentTime != null" >
                paymentTime = #{paymentTime,jdbcType=TIMESTAMP},
            </if>
            <if test="type != null" >
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="state != null" >
                state = #{state,jdbcType=TINYINT},
            </if>
            <if test="refund != null" >
                refund = #{refund,jdbcType=TINYINT},
            </if>
            <if test="price != null" >
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="days != null" >
                days = #{days,jdbcType=INTEGER},
            </if>
            <if test="username != null" >
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null" >
                telephone = #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="number != null" >
                number = #{number,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from orders
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByExample" parameterType="com.jiabian.beans.basic.hotel.OrdersQueryHelper" >
        delete from orders
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

	<select id="countOrders" parameterType="com.jiabian.base.PagesModel" resultType="int">
		select count(*)
		<include refid="add"></include>
	</select>
	
	<select id="countOrdersByCondition" parameterType="java.util.Map" resultType="int">
		select count(*)
		<include refid="add"></include>
		where true
		<if test="orderCode != ''">
			and orderCode like '%${orderCode}%'
		</if>
		<if test="condition != ''">
			${condition}
		</if>
		<if test="pagesModel.orderBy != null">
    		order by ${pagesModel.orderBy}
    	</if>
    	<if test="pagesModel.doPage">
    		LIMIT #{pagesModel.limitStart,jdbcType=INTEGER},
            #{pagesModel.limitNum,jdbcType=INTEGER}
    	</if>
	</select>
	
	<select id="selectOrdersByCondition" parameterType="java.util.Map" resultType="com.jiabian.hotel.response.OrdersRes">
		select *
		<include refid="add"></include>
		where true
		<if test="orderCode != ''">
			and orderCode like '%${orderCode}%'
		</if>
		<if test="condition != ''">
			${condition}
		</if>
		<if test="pagesModel.orderBy != null">
    		order by ${pagesModel.orderBy}
    	</if>
    	<if test="pagesModel.doPage">
    		LIMIT #{pagesModel.limitStart,jdbcType=INTEGER},
            #{pagesModel.limitNum,jdbcType=INTEGER}
    	</if>
	</select>
	
	<select id="selectOrders" parameterType="com.jiabian.base.PagesModel" 
		resultType="com.jiabian.hotel.response.OrdersRes">
		select *
		<include refid="add"></include>
		<if test="orderBy != null">
    		order by ${orderBy}
    	</if>
    	<if test="doPage">
    		LIMIT #{limitStart,jdbcType=INTEGER},
            #{limitNum,jdbcType=INTEGER}
    	</if>
	</select>
	
	<sql id="add">
		from orders
	</sql>

</mapper>