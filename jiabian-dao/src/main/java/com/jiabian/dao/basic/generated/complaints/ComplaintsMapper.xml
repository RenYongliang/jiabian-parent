<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jiabian.dao.basic.complaints.ComplaintsMapper" >
    <resultMap id="BaseResultMap" type="com.jiabian.beans.basic.complaints.Complaints" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="userid" property="userid" jdbcType="VARCHAR" />
        <result column="compName" property="compName" jdbcType="VARCHAR" />
        <result column="reason" property="reason" jdbcType="TINYINT" />
        <result column="details" property="details" jdbcType="LONGVARCHAR" />
        <result column="img" property="img" jdbcType="LONGVARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="idcard" property="idcard" jdbcType="VARCHAR" />
        <result column="telephone" property="telephone" jdbcType="VARCHAR" />
        <result column="company" property="company" jdbcType="VARCHAR" />
        <result column="time" property="time" jdbcType="TIMESTAMP" />
        <result column="status" property="status" jdbcType="TINYINT" />
        <result column="video" property="video" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        id, userid, compName, reason, details, img, name, idcard, telephone, company, time, 
        status, video
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jiabian.beans.basic.complaints.ComplaintsQueryHelper" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from complaints
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select 
        <include refid="Base_Column_List" />
        from complaints
        where id = #{id,jdbcType=BIGINT}
    </select>

    <insert id="insert" parameterType="com.jiabian.beans.basic.complaints.Complaints" >
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into complaints (userid, compName, reason, 
            details, img, name, 
            idcard, telephone, company, 
            time, status, video
            )
        values (#{userid,jdbcType=VARCHAR}, #{compName,jdbcType=VARCHAR}, #{reason,jdbcType=TINYINT}, 
            #{details,jdbcType=LONGVARCHAR}, #{img,jdbcType=LONGVARCHAR}, #{name,jdbcType=VARCHAR}, 
            #{idcard,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, 
            #{time,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, #{video,jdbcType=VARCHAR}
            )
    </insert>

    <insert id="insertSelective" parameterType="com.jiabian.beans.basic.complaints.Complaints" >
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into complaints
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="userid != null" >
                userid,
            </if>
            <if test="compName != null" >
                compName,
            </if>
            <if test="reason != null" >
                reason,
            </if>
            <if test="details != null" >
                details,
            </if>
            <if test="img != null" >
                img,
            </if>
            <if test="name != null" >
                name,
            </if>
            <if test="idcard != null" >
                idcard,
            </if>
            <if test="telephone != null" >
                telephone,
            </if>
            <if test="company != null" >
                company,
            </if>
            <if test="time != null" >
                time,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="video != null" >
                video,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="userid != null" >
                #{userid,jdbcType=VARCHAR},
            </if>
            <if test="compName != null" >
                #{compName,jdbcType=VARCHAR},
            </if>
            <if test="reason != null" >
                #{reason,jdbcType=TINYINT},
            </if>
            <if test="details != null" >
                #{details,jdbcType=LONGVARCHAR},
            </if>
            <if test="img != null" >
                #{img,jdbcType=LONGVARCHAR},
            </if>
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="idcard != null" >
                #{idcard,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null" >
                #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="company != null" >
                #{company,jdbcType=VARCHAR},
            </if>
            <if test="time != null" >
                #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null" >
                #{status,jdbcType=TINYINT},
            </if>
            <if test="video != null" >
                #{video,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.jiabian.beans.basic.complaints.ComplaintsQueryHelper" resultType="java.lang.Integer" >
        select count(*) from complaints
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update complaints
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.userid != null" >
                userid = #{record.userid,jdbcType=VARCHAR},
            </if>
            <if test="record.compName != null" >
                compName = #{record.compName,jdbcType=VARCHAR},
            </if>
            <if test="record.reason != null" >
                reason = #{record.reason,jdbcType=TINYINT},
            </if>
            <if test="record.details != null" >
                details = #{record.details,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.img != null" >
                img = #{record.img,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.name != null" >
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.idcard != null" >
                idcard = #{record.idcard,jdbcType=VARCHAR},
            </if>
            <if test="record.telephone != null" >
                telephone = #{record.telephone,jdbcType=VARCHAR},
            </if>
            <if test="record.company != null" >
                company = #{record.company,jdbcType=VARCHAR},
            </if>
            <if test="record.time != null" >
                time = #{record.time,jdbcType=TIMESTAMP},
            </if>
            <if test="record.status != null" >
                status = #{record.status,jdbcType=TINYINT},
            </if>
            <if test="record.video != null" >
                video = #{record.video,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update complaints
        set id = #{record.id,jdbcType=BIGINT},
            userid = #{record.userid,jdbcType=VARCHAR},
            compName = #{record.compName,jdbcType=VARCHAR},
            reason = #{record.reason,jdbcType=TINYINT},
            details = #{record.details,jdbcType=LONGVARCHAR},
            img = #{record.img,jdbcType=LONGVARCHAR},
            name = #{record.name,jdbcType=VARCHAR},
            idcard = #{record.idcard,jdbcType=VARCHAR},
            telephone = #{record.telephone,jdbcType=VARCHAR},
            company = #{record.company,jdbcType=VARCHAR},
            time = #{record.time,jdbcType=TIMESTAMP},
            status = #{record.status,jdbcType=TINYINT},
            video = #{record.video,jdbcType=VARCHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.jiabian.beans.basic.complaints.Complaints" >
        update complaints
        <set >
            <if test="userid != null" >
                userid = #{userid,jdbcType=VARCHAR},
            </if>
            <if test="compName != null" >
                compName = #{compName,jdbcType=VARCHAR},
            </if>
            <if test="reason != null" >
                reason = #{reason,jdbcType=TINYINT},
            </if>
            <if test="details != null" >
                details = #{details,jdbcType=LONGVARCHAR},
            </if>
            <if test="img != null" >
                img = #{img,jdbcType=LONGVARCHAR},
            </if>
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="idcard != null" >
                idcard = #{idcard,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null" >
                telephone = #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="company != null" >
                company = #{company,jdbcType=VARCHAR},
            </if>
            <if test="time != null" >
                time = #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="video != null" >
                video = #{video,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from complaints
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByExample" parameterType="com.jiabian.beans.basic.complaints.ComplaintsQueryHelper" >
        delete from complaints
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

	<select id="selectComplaints" parameterType="com.jiabian.base.PagesModel" resultType="com.jiabian.tspt.response.ComplaintsRes">
		select *
		<include refid="add"></include>
		<if test="orderBy != null">
            ORDER BY ${orderBy}
        </if>
        <if test="doPage">
            LIMIT #{limitStart,jdbcType=INTEGER},
            #{limitNum,jdbcType=INTEGER}
        </if>
	</select>
	
	<select id="countComplaintsByCondition" parameterType="java.util.Map" resultType="int">
		select count(*)
		<include refid="add"></include>
		where true
		<if test="complaintsReq.id != '' and complaintsReq.id != null">
			and id = #{complaintsReq.id}
		</if>
		<if test="complaintsReq.userid != '' and complaintsReq.userid != null">
			and userid = #{complaintsReq.userid}
		</if>
		<if test="complaintsReq.status != 0">
			and status = #{complaintsReq.status}
		</if>
	</select>
	
	<select id="selectComplaintsByCondition" parameterType="java.util.Map" resultType="com.jiabian.tspt.response.ComplaintsRes">
		select *
		<include refid="add"></include>
		where true
		<if test="complaintsReq.id != '' and complaintsReq.id != null">
			and id = #{complaintsReq.id}
		</if>
		<if test="complaintsReq.userid != '' and complaintsReq.userid != null">
			and userid = #{complaintsReq.userid}
		</if>
		<if test="complaintsReq.status != 0">
			and status = #{complaintsReq.status}
		</if>
		<if test="pagesModel.orderBy != null">
			ORDER BY #{pagesModel.orderBy}
		</if>
		<if test="pagesModel.doPage">
			LIMIT #{pagesModel.limitStart,jdbcType=INTEGER},
            #{pagesModel.limitNum,jdbcType=INTEGER}
		</if>
	</select>

	<sql id="add">
		from complaints
	</sql>

</mapper>